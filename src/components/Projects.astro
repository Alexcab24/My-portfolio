---
import ReactJS from "./icons/React.astro";
import AstroIcon from "./icons/AstroIcon.astro";
import Tailwind from "./icons/Tailwind.astro";
import SocialPill from "./SocialPill.astro";
import Link from "./icons/Link.astro";
import GitHub from "./icons/GitHub.astro";
import Nextjs from "./icons/NextJS.astro";
import Postgre from "./icons/Postgre.astro";
import Docker from "./icons/Docker.astro";
import Prisma from "./icons/Prisma.astro";
import CSS from "./icons/CSS.astro";
import TypeScript from "./icons/TypeScript.astro";

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-[#3498DB] text-white",
    icon: ReactJS,
  },
  NEXTJS: {
    name: "Nextjs",
    class: "bg-black text-white",
    icon: Nextjs,
  },
  ASTRO: {
    name: "Astro",
    class: "bg-black text-white",
    icon: AstroIcon,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    class: "bg-blue-900 text-white",
    icon: Postgre,
  },
  DOCKER: {
    name: "Docker",
    class: "bg-sky-900 text-white",
    icon: Docker,
  },
  PRISMA: {
    name: "Prisma",
    class: "bg-slate-900 text-white",
    icon: Prisma,
  },
  CSS: {
    name: "CSS",
    class: "bg-[#264de4] text-white",
    icon: CSS,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-[#3178C6] text-white",
    icon: TypeScript,
  },
};

const PROJECTS = [
  {
    title: "Inventory System",
    description:
      "Desarrollé un Sistema de Inventario tipo SaaS multitenant que permite a las empresas gestionar sus productos, usuarios y proveedores de manera eficiente. Utilicé Next.js, Tailwind CSS, Prisma y PostgreSQL para crear una aplicación escalable y con un diseño moderno. Implementé filtrado avanzado, historial de movimientos y control de acceso por roles, asegurando una experiencia fluida y optimizada en Vercel.",
    credentials: `Credenciales de acceso: 
    
    Email: user@google.com, 
    Contraseña: 12345678`,
    link: "https://testcompany.inventary-app-test.lat/dashboard",
    github: "https://github.com/Alexcab24/inventory-system",
    image: "/projects/inventory-system.png",
    tags: [
      TAGS.NEXTJS,
      TAGS.TAILWIND,
      TAGS.POSTGRESQL,
      TAGS.DOCKER,
      TAGS.PRISMA,
      TAGS.TYPESCRIPT,
    ],
  },
  {
    title: "Roulette View",
    description:
      "Roulette View es una plataforma web para el análisis de resultados de ruletas online, desarrollada con React y TypeScript. Participé en el desarrollo completo del frontend, implementando autenticación, gestión de sesiones, visualización de datos en tiempo real con gráficos interactivos y una arquitectura escalable. Utilicé tecnologías como Apollo Client, Zustand y TailwindCSS para asegurar una interfaz moderna, eficiente y responsiva. También diseñé y desarrollé la sección de suscripciones, facilitando la selección de planes y métodos de pago con una integración fluida con el backend.",
    link: "https://roulettesview.com/",
    github: "",
    image: "/projects/rouletteView.png",
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
  {
    title: "Proyecto Midas",
    description:
      "Desarrollé una página web para Proyecto Midas, una empresa publicitaria, utilizando Astro para la estructura, Tailwind CSS para el diseño y React para funcionalidades interactivas. Implementé un buscador interno usando los hooks useState y useEffect para mejorar la experiencia del usuario al navegar por el contenido.",
    link: "https://proyectomidas.com/",
    github: "",
    image: "/projects/Midas.png",
    tags: [TAGS.ASTRO, TAGS.REACT, TAGS.TAILWIND],
  },
];
---

<article class="w-full justify-center">
  {
    PROJECTS.map(
      ({ image, title, description, credentials, tags, link, github }) => (
        <section class="flex flex-col md:flex-row justify-between items-center gap-6 md:gap-10 mb-4">
          <div class="text-primary-text dark:text-white md:w-[400px]">
            <h3 class="text-secondary dark:text-secondary-light text-xl font-semibold ">
              {title}
            </h3>
            <ul class="flex flex-wrap mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`my-2 flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>
            <p class="text-sm dark:text-gray-300">{description}</p>
            {credentials && (
              <div class="mt-2 p-2 bg-secondary/10 dark:bg-secondary/20 rounded-lg border border-secondary/20">
                <p class="text-sm font-medium text-secondary dark:text-secondary-light">
                  {credentials}
                </p>
              </div>
            )}
            <div class="flex flex-wrap gap-5">
              <SocialPill
                class={`
                bg-secondary dark:bg-secondary-dark
                rounded-lg
                flex justify-center items-center gap-x-2
                my-5
                py-1 px-2 md:py-2 md:px-4
                text-xs md:text-base
                text-white
                transition
                hover:bg-blue-500 
                hover:bg-opacity-25 
                hover:border-[#6e5494] 
                duration-300 
                ease
              `}
                href={link}
              >
                <Link class="size-4 md:size-6" />
                Demo
              </SocialPill>
              <SocialPill
                class={`
                bg-secondary dark:bg-secondary-dark
                rounded-lg
                flex justify-center items-center gap-x-2
                my-5
                py-1 px-2 md:py-2 md:px-4
                text-xs md:text-base
                text-white
                transition
                hover:bg-blue-500 
                hover:bg-opacity-25 
                hover:border-[#6e5494] 
                duration-300 
                ease
              `}
                href={github}
              >
                <GitHub class="size-4 md:size-6" />
                {!github ? "Privado" : "Code"}
              </SocialPill>
            </div>
          </div>
          <a
            href={link}
            target="_blank"
            class="group relative overflow-hidden rounded-lg border-2 shadow-lg hover:shadow-secondary dark:hover:shadow-white transition-all duration-500 w-full md:w-auto"
          >
            <img
              src={image}
              alt="project image"
              class="object-cover object-center w-full h-full transition-transform duration-1000 ease-in-out transform group-hover:scale-110 md:h-56"
            />
          </a>
        </section>
      ),
    )
  }
</article>
